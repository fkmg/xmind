package com.sxt.interceptor;

import com.sxt.annotation.LoginAnnotation;
import com.sxt.bean.User;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.time.DateFormatUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.core.MethodParameter;
import org.springframework.web.method.HandlerMethod;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.lang.reflect.Method;
import java.util.Date;


/**
 * Created by Lenovo on 2019/12/7.
 */
public class LandInterceptor implements HandlerInterceptor {

    private static Log log = LogFactory.getLog(LandInterceptor.class);

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {

        HandlerMethod handlerMethod = (HandlerMethod) handler;
        Method method = handlerMethod.getMethod();
        System.out.println(method.getName());
        MethodParameter[] parameters = handlerMethod.getMethodParameters();
        if(parameters !=null){
            System.out.println(StringUtils.join(parameters,"++++++"));
        }
        MethodParameter returnType = handlerMethod.getReturnType();
        System.out.println(returnType.getClass().getName());
        //2、获取方法所在的类Class对象
        Class<?> parent = method.getDeclaringClass();
        //3、判断所在类中是否有登陆的注解
        if(parent != null){
            LoginAnnotation parentAnnotation = parent.getAnnotation(LoginAnnotation.class);
            if(parentAnnotation != null){
                //将请求转发给判断登陆方法
                return judageLogin(request,response,handler);
            }
        }
        //判断此方法中是否有此注解
        LoginAnnotation annotation = method.getAnnotation(LoginAnnotation.class);
        if(annotation != null){
            //将请求转发给判断登陆方法
            return judageLogin(request,response,handler);
        }
        //放行
        log.debug("此方法不用登陆");
        return true;


    }

    @Override
    public void postHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView) throws Exception {

    }

    @Override
    public void afterCompletion(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e) throws Exception {

    }


    private boolean judageLogin(HttpServletRequest request, HttpServletResponse response,Object o) throws IOException {

        Class<?> method = o.getClass();
        Date now = new Date();
        HttpSession session = request.getSession();
        User user =(User) session.getAttribute("user");
        if(user != null){
            log.debug("["+DateFormatUtils.format(now,"yyyy/MM/dd HH:mm:ss")+"]"+user.getUsername()+"访问了"+method.getName());
            return true;
        }
        //获取用户的请求ip
        String addr = request.getRemoteAddr();
        int port = request.getRemotePort();
        //重定向让用户去登陆
        log.debug("["+DateFormatUtils.format(now,"yyyy/MM/dd HH:mm:ss")+"]"+addr+"/"+port+"访问了"+method.getName());
        response.sendRedirect("/spouse");
        return false;
    }
}
