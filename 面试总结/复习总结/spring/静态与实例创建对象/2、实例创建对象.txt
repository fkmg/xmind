步骤1:创建User.java实体类
package cn.zzsxt.entity;

public class User {
	private String username;
	private String password;
	
	public User() {
		System.out.println("无参的构造函数被调用了...");
	}
	
	public User(String username,String password){
		System.out.println("有参构造函数被调用....");
		this.username=username;
		this.password=password;
	}
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}

	@Override
	public String toString() {
		return "User [username=" + username + ", password=" + password + "]";
	}
}

步骤2:创建UserFactory2工厂类，并在其中提供实例工程方法getUserInstance()
package cn.zzsxt.entity;
/**
 * 静态工程方法:类名.方法名进行调用工厂方法。
 * @author Think
 *
 */
public class UserFactory {
public void init(){
    System.out.println("init().....");
}
	public User getUserInstance(){
		return new User();
	}
	
	public User getUserInstance(String username,String password){
		return new User(username,password);
	}
public void destory(){
System.out.println("destory().....");
}
}



步骤3:在spring配置文件中配置静态工程

 <!-- 实例工程方法 --> 
    <!-- 1.先创建工厂的实例 -->
   <bean id="userFactory" class="cn.zzsxt.entity.UserFactory2"></bean>
    <!-- 2.调用实例工厂中的工程方法创建对象 -->
    <bean id="user4" factory-bean="userFactory"  factory-method="getUserInstance" init-method="init" destory-method="destroy"></bean>
    <bean id="user5" factory-bean="userFactory"  factory-method="getUserInstance">
    	<constructor-arg index="0" value="admin"></constructor-arg>
    	<constructor-arg index="1" value="admin"></constructor-arg>
    </bean>