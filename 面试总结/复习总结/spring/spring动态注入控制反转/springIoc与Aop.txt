spring的优点
1、降低了组件之间的耦合性，实现了软件各层之间的解耦
2、可以使用容易提供的众多服务，如事务管理，消息服务等
3、容器提供单例模式支持
4、容器提供了AOP技术，利用它很容易实现权限拦截，运行期监控等功能
5、容器提供了众多的辅助类，能加快应用的开发
6、spring对于主流的应用框架提供了集成支持。
7、spring属于低侵入式设计，代码的污染极低。
8、独立于各种应用服务器。
9、spring的DI机制降低了业务对象替换的复杂性
10、Spring的高度开放性，并不强制应用完全依赖于Spring，开发者可以自由选择sprign的部分或全部

什么是DI机制 依赖注入和控制反转

什么是AOP？
面向切面编程(AOP)完善spring的依赖注入(DI)，面向切面编程在spring中主要表现为两个方面
1、面向切面编程提供声明式事务管理
2、spring支持用户自定义的切面


springMVC的执行流程
1、发送请求给前端控制器
2、前端控制器会找处理器映射器，处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器一并返回给DispatcherServlet.
3、返回的处理器,DispatcherServlet会找"合适"的适配器(HandlerAdapter)
4、处理器适配器HandlerAdapter会去执行处理器(Handler开发的时候被叫成Controller后端控制器)执行之前会有转换器，数据绑定，校验器等等完成上面才会执行Handler
5、后端控制器Handler执行完成之后返回一个ModelAndView对象
6、处理器适配器HandlerAdapter会将这个ModelAndView返回前端控制器DispatcherServlet.前端控制器会找处理器映射器，处理器映射器根据请求url找到具体的处理器，生成处理器对象交给视图解析器ViewResolver
7、视图解析器ViewResolver解析ModelAndView对象之后返回逻辑视图
8、前端控制器DispatcherServlet对逻辑视图进行渲染(数据填充)之后返回真正的物理View给浏览器





















