1、Java 中的异常处理机制的简单原理和应用

异常是指java程序运行时(非编译)所发生的非正常情况或错误，java异常的超类是Throwable
其有两个子类分别为Error和Exception。error表示应用程序本身无法克服和恢复的一种严重问题
如:内存的溢出和现成的死锁等系统问题。Exception表示程序能够克服和恢复的问题，其中又分
为运行异常和编译异常。运行异常常见的有空指针异常NullPointerException,类转换异常(ClassCastException)
数组下标越界(ArrayIndexOutOfBoundsException)编译异常不强制用try...catch处理或用throws声明。所以系统也称为
unchecked异常。

2、多线程有几种实现方法?同步有几种实现方法?
	多线程有两种实现方法，分别是继承Thread类与实现Runnable接口.同步的实现方法有
两种，分别是synchronized,wait与notify。
 a、wait()：使一个线程处于等待状态，并且释放所有的对象的lock。
 b、sleep()：使一个正在运行的线程处于睡眠状态，是一个静态方法，调用此方法要捕捉
InterruptedException 异常。
 c、notify():唤醒一个处于等待状态的线程，注意的是在调用此方法的时候，并不能确切的唤醒
某一个等待状态的线程，而是由JVM确定唤醒哪个线程，而且不是按照优先级
 d. allnotity():唤醒所有处入等待状态的线程，注意并不是给所有唤醒线程一个对象的 锁，而是让它们竞争。

3、启动一个线程是用run()还是start()?




















