Configuration
负责管理数据库的配置信息

SessionFactory
针对单个数据库映射关系经过编译后的内存镜像，是线程安全的(不可变)。作为Session的工厂
和ConnectionProvider的客户。SessionFactory可以在进程或集群的级别上，为那些事务之间的可以
重用的数据提供可选的二级缓存。

SessionFactory使用要点如下:
1、负责创建Session对象，可以通过Configuration对象创建SessionFactoy对象
2、SessionFactory对象中保存了当前的数据库配置信息和所有映射关系以及预定义的SQL语句
3、SessionFactory还负责维护Hibernate的二级缓存。
4、SessionFactory对象的创建会有较大的开销,而且SessionFactory对象采取了线程安全的设计方式
，因此在实际中SessionFactory对象可以尽量的共享，在大多数情况下，一个应用中针对一个数据
可以共享一个SessionFactory实例.
SessionFactory创建代码如下:
Configuration config = new Configuration().configure();
SessionFactory factory =config.buildSessionFactory();

Session
1、表示应用程序与持久存储层之间交互操作的一个单线程对象，此对象生存期很短。其隐藏了JDBC
来凝结，也是Transcation的工厂。它会持有一个针对持久化对象的必选(第一级)缓存，在白能力对象图或者根据持久化标识查找
对象时会用到。
2、Session定义了添加，更新，删除和查询等操作，是持久化操作的基础。Session的设计是非
线程安全的，因此，一个Session对象只可以由一个线程使用。

事务的四大特性:
1、原子性 要么全做，要么全不做
2、一致性 使数据库从一个事务状态变到另一个一致性状态
3、隔离性 一事务的执行，不能被其它事务所干扰
4、持久性/永久性 一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。


Hibernate对象的状态和生命周期、、
1、Transient瞬时/临时态

2、Persist持久态

3、Detached托管/游离态











































































































































